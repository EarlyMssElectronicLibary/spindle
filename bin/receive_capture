#!/bin/sh

HELP=`cat<<-EOF
For a set of capture dataa, check the data for validaity, and collect metadata.

A valid Capture folder must contain folders RAWS and FLATTENED.

EOF`

### TEMPFILES
# From:
#   http://stackoverflow.com/questions/430078/shell-script-templates
# create a default tmp file name
tmp=${TMPDIR:-/tmp}/prog.$$
# delete any existing temp files
trap "rm -f $tmp.?; exit 1" 1 2 3 13 15
# then do
#   ...real work that creates temp files $tmp.1, $tmp.2, ...

# FUNCTIONS

receipt_failure() {
  rf_validating_flag=$1
  rf_errors_flag=$2
  rf_msg="$3"
  rm -f $rf_validating_flag
  echo "$rf_msg" > $rf_errors_flag
  fail "$rf_msg"
}

# Function to clean up and print a success message
receipt_success() {
  rs_validating_flag=$1
  rs_msg="$2"
  rm -f $rs_validating_flag
  success "$rs_msg"
}

#### USAGE AND ERRORS
cmd=`basename $0 .sh`
export SPINDLE_COMMAND=$cmd
source `dirname $0`/spindle_functions

usage() {
   echo "Usage: $cmd [options] PACKAGE_DIR|PACKAGE.tar"
   echo ""
   echo "OPTIONS"
   echo ""
   echo "   -C             Clean old receipt logs"
   echo "   -o             Optional output directory for tar file"
   echo "   -h             Display help message"
   echo "   -v             Display Spindle version"
   echo ""
}

this_dir=`dirname $0`
this_dir=`(cd $this_dir; pwd)`
# the scripts we'll run

### VARIABLES
RECEIPT_APPROVED=RECEIPT_APPROVED.txt
# the capture dir
CAPTURE_DIR=
# Subdirs
RAWS_DIR=
FLATTENED_DIR=

### OPTIONS
while getopts ":hvCo:" opt; do
  case $opt in
    h)
      usage 
      version
      help
      exit 0
      ;;
    v)
      version
      exit 0
      ;;
    o)
      OUTPUT_DIR=$OPTARG
      ;;
    C)
      CLOBBER_LOGS=true
      ;;
    \?)
      echo "ERROR Invalid option: -$OPTARG" >&2
      echo ""
      usage
      exit 1
      ;;
  esac
done

shift $((OPTIND-1))

### THESCRIPT
# grab package directoy and confirm it exists
CAPTURE_DIR=$1
if [ -n "$CAPTURE_DIR" ]; then
  if [ -e $CAPTURE_DIR ]; then
    message "Using CAPTURE_DIR: $CAPTURE_DIR"
  else
    error "Could not find CAPTURE_DIR: $CAPTURE_DIR"
  fi
else
  error "Please provide a CAPTURE_DIR"
fi
if ! valid_capture_dir "$CAPTURE_DIR" >/dev/null ; then
  error "Error finding CAPTURE_DIR: $CAPTURE_DIR"
fi

# errors found file
ERRORS_FOUND_FLAG=$CAPTURE_DIR/ERRORS_FOUND.txt

# flag to show we started the process
VALIDATING_FLAG=$CAPTURE_DIR/VALIDATING.txt

touch $VALIDATING_FLAG

## RUN EACH SCRIPT
# * `verify_package`
$VERIFY_PACKAGE $PACKAGE_DIR
if [ $? -ne 0 ]; then
  receipt_failure $VALIDATING_FLAG $ERRORS_FOUND_FLAG "package validation failure"
fi

# * `verify_manifest`
$VERIFY_CHECKSUMS $PACKAGE_DIR
if [ $? -ne 0 ]; then
  receipt_failure $VALIDATING_FLAG $ERRORS_FOUND_FLAG "manifest validation failure"
fi

# * `verify_all_filenames`
$VERIFY_ALL_FILENAMES $PACKAGE_DIR
if [ $? -ne 0 ]; then
  receipt_failure $VALIDATING_FLAG $ERRORS_FOUND_FLAG "filename validation failure"
fi

# * `verify_all_metadata`
$VERIFY_ALL_METADATA $PACKAGE_DIR
if [ $? -ne 0 ]; then
  receipt_failure $VALIDATING_FLAG $ERRORS_FOUND_FLAG "metadata validation failure"
fi

# mark the package complete
iso_date > $PACKAGE_DIR/$RECEIPT_APPROVED

receipt_success $VALIDATING_FLAG "Package preparation complete"

### EXIT
# http://stackoverflow.com/questions/430078/shell-script-templates
rm -f $tmp.?
trap 0
exit 0


