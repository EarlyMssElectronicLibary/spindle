#!/bin/sh

read -r -d '' HELP <<-'EOF'

Collect metadata to upload to the KatIkon system for capture images files in
CAPTURE_DIR. Two sets of JSON files will be created for capture images and
named using the SESSION_TAG: one for flattened TIFFs and one for  developed
JPEG images.  JSON metadata will be written out in chunks with 200 records for
each JSON file. DNG files in the RAWS folder are not handled.

For example,

    $ capture_collect_metadata /Volumes/DriveName/Capture 2013.05
    Wrote /Volumes/DriveName/Capture/2013.05_20140218_metadata_001.json
    Wrote /Volumes/DriveName/Capture/2013.05_20140218_metadata_002.json
    Wrote /Volumes/DriveName/Capture/2013.05_20140218_metadata_003.json
    ...

A capture folder should have the following structure.

      Capture/
        FLATTENED/
          0050_000001/
            0050_000001+MB365UV_001_F.tif
            0050_000001+MB455RB_002_F.tif
            ...
          0050_000002/
          0052_000001/
          0052_000002/
          0052_000003/
          ...
        RAWS
          0050_000001/
            0050_000001+MB365UV_001.dng
            0050_000001+MB455RB_002.dng
            ...
          0050_000002/
          0052_000001/
          0052_000002/
          0052_000003/
          ...
       DEVELOPED/
          0050_000001/
            0050_000001+MB365UV_001.jpg
            0050_000001+MB455RB_002.jpg
            ...
          0050_000002/
          0052_000001/
          0052_000002/
          0052_000003/
          ...


EOF

### TEMPFILES
# From:
#   http://stackoverflow.com/questions/430078/shell-script-templates
# create a default tmp file name
tmp=${TMPDIR:-/tmp}/prog.$$
# delete any existing temp files
trap "rm -f $tmp.?; exit 1" 0 1 2 3 13 15
# then do
#   ...real work that creates temp files $tmp.1, $tmp.2, ...

#### USAGE AND ERRORS
cmd=`basename $0 .sh`
export SPINDLE_COMMAND=$cmd
source `dirname $0`/spindle_functions

usage() {
   echo "Usage: $cmd [-h] CAPTURE_DIR SESSION_TAG"
   echo ""
   echo "OPTIONS"
   echo ""
   echo "   -h             Display help message"
   echo "   -v             Display Spindle version"
   echo ""
}

### CONSTANTS
# the name of the manifest in each dir
MANIFEST_FILE=manifest-md5s.txt

### VARIABLES
# the package dir
CAPTURE_DIR=
# the data directory
SESSION_TAG=


### OPTIONS
while getopts ":hv" opt; do
  case $opt in
    h)
      usage
      version
      help
      exit 1
      ;;
    v)
      version
      exit 1
      ;;
    \?)
      echo "ERROR Invalid option: -$OPTARG" >&2
      echo ""
      usage
      exit 1
      ;;
  esac
done

shift $((OPTIND-1))

### THESCRIPT
# grab package directoy and confirm it exists
CAPTURE_DIR="$1"
if valid_capture_dir $1 ; then
  message "Using CAPTURE_DIR: $CAPTURE_DIR"
else
  error "Please provide a valid capture dir: '$CAPTURE_DIR'"
fi

export logfile="`get_full_path $CAPTURE_DIR`/RECPT_metadata.log"

SESSION_TAG="$2"
if ! valid_session_tag "$SESSION_TAG"; then
  error "Please provide a valid SESSION_TAG: '$SESSION_TAG'"
fi

this_dir=`dirname $0`
this_dir=`get_full_path "$this_dir"`

file_list=$tmp.1
(
  cd $CAPTURE_DIR

  # 2014-08-09 remove RAWS; no longer ingesting/checking in DNGs
  for kind in FLATTENED DEVELOPED
  do
    # get all the developed jpegs
    if [ $kind = "DEVELOPED" ]; then
      find $kind -path "*[0-9][0-9][0-9][0-9]_[0-9][0-9][0-9][0-9][0-9][0-9]*" -iname \*.jpg > $file_list

    # get all the DNGs and TIFFs
    else
      find $kind -path "*[0-9][0-9][0-9][0-9]_[0-9][0-9][0-9][0-9][0-9][0-9]*" \
        \( -iname \*.dng -o -iname \*.tif \) > $file_list
    fi
    # get the page directory name
    json_base="CAPTURE_${kind}_${SESSION_TAG}"

    ${this_dir}/collect_metadata $file_list $json_base
  done
)

### EXIT
# http://stackoverflow.com/questions/430078/shell-script-templates
rm -f $tmp.?
trap 0
exit 0


