#!/bin/sh

read -r -d '' HELP <<-'EOF'

For REPO_DIRECTORY verify all files with checksums. Script checks each
subdirectory, looking for *.md5 files. Each *.md5 file will be checked.



EOF

### TEMPFILES
# From:
#   http://stackoverflow.com/questions/430078/shell-script-templates
# create a default tmp file name
tmp=${TMPDIR:-/tmp}/prog.$$
# delete any existing temp files
trap "rm -f $tmp.?; exit 1" 0 1 2 3 13 15
# then do
#   ...real work that creates temp files $tmp.1, $tmp.2, ...

#### USAGE AND ERRORS
cmd=`basename $0 .sh`
export SPINDLE_COMMAND=`basename $0`
export HELP
source `dirname $0`/spindle_functions

usage() {
   echo "Usage: $cmd [OPTIONS] REPO_DIRECTORY"
   echo ""
   echo "OPTIONS"
   echo ""
   echo "   -h             Display help message"
   echo "   -v             Display Spindle version"
   echo ""
}

### CONSTANTS
# the list of valid files; don't run without it
# MANIFEST_FILE=manifest-md5s.txt
# REPO_PROC_DIR=Repository/Processed
# RECEIPT_APPROVED=RECEIPT_APPROVED.txt
# INGESTION_COMPLETE=IMAGE_INGESTION_COMPLETE.txt

### VARIABLES
# the package dir
# PACKAGE_DIR=
# # the data directory
# DATA_DIR=
# # the log of what we've ingested
# INGEST_LOG=
# # the drive where the repo is
# REPO_VOLUME=
# # the full path to the processed file folder
# REPO_PATH=

### OPTIONS
while getopts ":hv" opt; do
  case $opt in
    h)
      usage 
      version
      help
      exit 1
      ;;
    v)
      version
      exit 1
      ;;
    \?)
      echo "ERROR Invalid option: -$OPTARG" >&2
      echo ""
      usage
      exit 1
      ;;
  esac
done

shift $((OPTIND-1))

### THESCRIPT
# make sure repo dir exists
REPO_DIRECTORY=`dir_exists $1 REPO_DIRECTORY`
if [ $? -ne 0 ]; then
  error "Error finding destination directory"
fi

dir_list=$tmp.1
find $REPO_DIRECTORY -type d > $dir_list

count=0
total=`wc -l $dir_list | awk '{ print $1 }'`
date_cmd="date +%FT%T%z"
report_count $count $total 0
while read dir
do
  (
    cd $dir
    md5_files=`ls *.md5 2>/dev/null`
    if [ -n "$md5_files" ]; then  
      for x in $md5_files ; do
        checksum=`awk '{ print $1 }' $x`
        target_file=`awk '{ print $2} ' $x`
        expected_target=`echo $x | sed 's/\.md5$//'`
        if [ $target_file = $expected_target ]; then
          if file_valid $target_file $checksum ; then
            valid "$target_file"
          else
            invalid "$target_file"
          fi
        else
          invalid "Expected: ${expected_target}; md5 file has: ${target_file}"
        fi
      done
    fi
  )
  count=$(( $count + 1 ))
  report_count $count $total 0 $file
done < $dir_list

### EXIT
# http://stackoverflow.com/questions/430078/shell-script-templates
rm -f $tmp.?
trap 0
exit 0


