#!/bin/sh

HELP=`cat<<-EOF
For a set of capture dataa, check the data for validaity, and collect metadata.

A valid Capture folder must contain folders RAWS and FLATTENED.

EOF`

### TEMPFILES
# From:
#   http://stackoverflow.com/questions/430078/shell-script-templates
# create a default tmp file name
tmp=${TMPDIR:-/tmp}/prog.$$
# delete any existing temp files
trap "rm -f $tmp.?; exit 1" 1 2 3 13 15
# then do
#   ...real work that creates temp files $tmp.1, $tmp.2, ...

# FUNCTIONS

receipt_failure() {
  rf_validating_flag=$1
  rf_errors_flag=$2
  rf_msg="$3"
  rm -f $rf_validating_flag
  echo "$rf_msg" > $rf_errors_flag
  fail "$rf_msg"
}

# Function to clean up and print a success message
receipt_success() {
  rs_validating_flag=$1
  rs_msg="$2"
  rm -f $rs_validating_flag
  success "$rs_msg"
}

#### USAGE AND ERRORS
cmd=`basename $0 .sh`
export SPINDLE_COMMAND=$cmd
source `dirname $0`/spindle_functions

usage() {
   echo "Usage: $cmd [options] CAPTURE_DIR SESSION_TAG"
   echo ""
   echo "OPTIONS"
   echo ""
   echo "   -C             Clean old receipt logs"
   echo "   -o             Optional output directory for tar file"
   echo "   -h             Display help message"
   echo "   -v             Display Spindle version"
   echo ""
}

this_dir=`dirname $0`
this_dir=`(cd $this_dir; pwd)`
# the scripts we'll run
CAP_FIX_MANIFESTS="${this_dir}/capture_prep_md5s"
CAP_CHECK_MANIFEST="${this_dir}/capture_check_md5s"
CAP_COLLECT_METADATA="${this_dir}/capture_collect_metadata"
CAP_INSPECT_METADATA="${this_dir}/capture_inspect_metadata"

### VARIABLES
RECEIPT_APPROVED=RECEIPT_APPROVED.txt
# the capture dir
CAPTURE_DIR=
# Subdirs
RAWS_DIR=
FLATTENED_DIR=

### OPTIONS
while getopts ":hvCo:" opt; do
  case $opt in
    h)
      usage 
      version
      help
      exit 0
      ;;
    v)
      version
      exit 0
      ;;
    o)
      OUTPUT_DIR=$OPTARG
      ;;
    C)
      CLOBBER_LOGS=true
      ;;
    \?)
      echo "ERROR Invalid option: -$OPTARG" >&2
      echo ""
      usage
      exit 1
      ;;
  esac
done

shift $((OPTIND-1))

### THESCRIPT
# grab package directoy and confirm it exists
CAPTURE_DIR=$1
if ! valid_capture_dir "$CAPTURE_DIR" >/dev/null ; then
  error "Error finding CAPTURE_DIR: $CAPTURE_DIR"
fi

SESSION_TAG="$2"
if ! valid_session_tag "$SESSION_TAG"; then
  error "Please provide a valid SESSION_TAG: $SESSION_TAG"
fi

## RECPT_ARTIFACTS OF PREVIOUS RUNS
RECPT_ARTIFACTS="RECPT_manifests.log RECPT_capture.log RECPT_metadata.log RECEIPT_APPROVED.txt ERRORS_FOUND.txt VALIDATING.txt"

# errors found file
ERRORS_FOUND_FLAG=$CAPTURE_DIR/ERRORS_FOUND.txt

# flag to show we started the process
VALIDATING_FLAG=$CAPTURE_DIR/VALIDATING.txt


# Before beginning, look for artifacts
leftovers=
for x in $RECPT_ARTIFACTS
do
  test_file=$CAPTURE_DIR/$x
  if [ -f $test_file ]; then
    if [ "$CLOBBER_LOGS" ]; then
      warning "Deleting old file $test_file"
      rm -f $test_file
    else
      leftovers="$leftovers $x"
    fi
  fi
done
x=

if [ "$leftovers" ]; then
  for x in $leftovers
  do
    error_no_exit "`format_code_message OLD_FILE_FOUND $x`"
  done
  receipt_failure $VALIDATING_FLAG $ERRORS_FOUND_FLAG "Stale files found"
fi

export logfile="`get_full_path $CAPTURE_DIR`/RECPT_capture.log"

message "Writing log to $logfile"


touch $VALIDATING_FLAG

## RUN EACH SCRIPT
# * `fix manifests`
$CAP_FIX_MANIFESTS "$CAPTURE_DIR"
if [ $? -ne 0 ]; then
  receipt_failure $VALIDATING_FLAG $ERRORS_FOUND_FLAG "manifest fix failure"
fi

# * `check manifests`
$CAP_CHECK_MANIFEST "$CAPTURE_DIR"
if [ $? -ne 0 ]; then
  receipt_failure $VALIDATING_FLAG $ERRORS_FOUND_FLAG "manifest validation failure"
fi

$CAP_COLLECT_METADATA "$CAPTURE_DIR" $SESSION_TAG
if [ $? -ne 0 ]; then
  receipt_failure $VALIDATING_FLAG $ERRORS_FOUND_FLAG "metadata collection failure"
fi

$CAP_INSPECT_METADATA "$CAPTURE_DIR"
if [ $? -ne -0 ]; then
  receipt_failure $VALIDATING_FLAG $ERRORS_FOUND_FLAG "metadata inspection failure"
fi



# mark the package complete
iso_date > "$CAPTURE_DIR/$RECEIPT_APPROVED"

receipt_success $VALIDATING_FLAG "Package receipt complete"

### EXIT
# http://stackoverflow.com/questions/430078/shell-script-templates
rm -f $tmp.?
trap 0
exit 0


