#!/bin/sh

read -r -d '' HELP <<-'EOF'
For the input REPO_DIR find each md5.txt file and check it.

EOF

### TEMPFILES
# From:
#   http://stackoverflow.com/questions/430078/shell-script-templates
# create a default tmp file name
tmp=${TMPDIR:-/tmp}/prog.$$
# delete any existing temp files
trap "rm -f $tmp.?; exit 1" 0 1 2 3 13 15
# then do
#   ...real work that creates temp files $tmp.1, $tmp.2, ...

#### USAGE AND ERRORS
cmd=`basename $0 .sh`
export SPINDLE_COMMAND=`basename $0`
export HELP
source `dirname $0`/spindle_functions

usage() {
   echo "Usage: $cmd [OPTIONS] REPO_DIR"
   echo ""
   echo "OPTIONS"
   echo ""
   echo "   -h             Display help message"
   echo "   -v             Display Spindle version"
   echo ""
}

### CONSTANTS

### VARIABLES
# the package dir
REPO_DIR=

### OPTIONS
while getopts ":hv" opt; do
  case $opt in
    h)
      usage
      version
      help
      exit 1
      ;;
    v)
      version
      exit 1
      ;;
    \?)
      echo "ERROR Invalid option: -$OPTARG" >&2
      echo ""
      usage
      exit 1
      ;;
  esac
done

shift $((OPTIND-1))

### THESCRIPT
# grab package directoy and confirm it exists
REPO_DIR=$1
if dir_exists $REPO_DIR
then
  message "Using REPO_DIR $REPO_DIR"
else
  error "Error finding REPO_DIR"
fi

# determine the md5sum command to use
MD5_CMD=
if which md5sum >/dev/null 2>&1 ; then
  MD5_CMD=`which md5sum`
elif which gmd5sum >/dev/null 2>&1 ; then
  MD5_CMD=`which gmd5sum`
elif which md5 >/dev/null 2>&1 ; then
  MD5_CMD="`which md5`"
else
  error "No md5 command found"
fi

export logfile="`get_full_path $REPO_DIR`/RECPT_manifests.log"

file_list=$tmp.1
# only find md5s in expected folder types
find $REPO_DIR -path "*[0-9][0-9][0-9][0-9]_[0-9][0-9][0-9][0-9][0-9][0-9]*" -name \*.md5 > $file_list
# cat $dir_list
count=0
total=`wc -l $file_list | awk '{ print $1 }'`
date_cmd="date +%FT%T%z"
report_count $count $total 0
while read md5_file
do
  message "$md5_file"
  dir=`dirname $md5_file`
  manifest=`basename $md5_file`
  output=`(
    cd $dir
    verifyMd5Manifest $manifest
  )`
  status=$?
  if [ -n "$logfile" ]; then
    echo "$output" | tee -a $logfile
  else
    echo "$output"
  fi
  if [ $status -ne 0 ]; then
    errors="$errors $md5_file"
    error_no_exit "Validation erorrs; see above: $md5_file"
  else
    message "Verified $md5_file"
  fi

  # COUNT AND REPORT
  count=$(( $count + 1 ))
  report_count $count $total 0 $file
done < $file_list

if [ -n "$errors" ]; then
  fail "Checksum validation failed"
else
  success "ALL VALID"
fi

### EXIT
# http://stackoverflow.com/questions/430078/shell-script-templates
rm -f $tmp.?
trap 0
exit 0
